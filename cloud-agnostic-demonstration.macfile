mac: 0.7.1
description: elastic_load_balancer 
name: demo
version: 2.0

actions:
    set_private_key:
        bash: |
            cat >/tmp/privkey <<EOL
            resource.ssh_pair.json.KeyMaterial
            EOL
            chmod 600 /tmp/privkey

    bootstrap:
        bash: "ssh -o StrictHostKeyChecking=no ubuntu@action.get_public_ip.text.regex(\"PublicIp\": \"([0-9\\.]+)\") -i /tmp/privkey 'sudo apt-get update && sudo apt-get install apache2 -y'"

    get_public_ip:
        bash: aws ec2 describe-instances --instance-ids resource.my_instance.json.Instances.0.InstanceId

resources:

    elastic_load_balancer:
        create bash:
            aws elb create-load-balancer
                --load-balancer-name infrastructure.param.name
                --listeners infrastructure.param.listeners
                --availability-zones infrastructure.param.availability-zones
                --region infrastructure.param.region


        destroy bash:
            aws elb delete-load-balancer
              --load-balancer-name infrastructure.param.name
              --region infrastructure.param.region

    ec2 create pair:
        create bash:
            aws ec2 create-key-pair
                --key-name infrastructure.param.key-name
                --region infrastructure.param.region
                
        destroy bash:
            aws ec2 delete-key-pair
                --key-name infrastructure.param.key-name
                --region infrastructure.param.region

    ec2 instance:
        create bash:
            aws ec2 run-instances
            --image-id infrastructure.param.image-id
            --count 1
            --instance-type infrastructure.param.instance-type
            --key-name infrastructure.param.key-name
            --security-groups default
            --region infrastructure.param.region

        destroy bash:
            aws ec2 terminate-instances
            --instance-ids resource.my_instance.json.Instances.0.InstanceId
            --region infrastructure.param.region

    register_lb:
        create bash:
            aws elb register-instances-with-load-balancer
            --load-balancer-name infrastructure.param.name
            --instances resource.my_instance.json.Instances.0.InstanceId
            --region infrastructure.param.region

infrastructures:
    load_balancer_01:
        resource: elastic_load_balancer
        params:
            name: my-demo-load-balancer
            listeners: Protocol=HTTP,LoadBalancerPort=80,InstanceProtocol=HTTP,InstancePort=80
            availability-zones: us-east-1b us-east-1c us-east-1d us-east-1e
            region: us-east-1

    ssh_pair:
        resource: ec2 create pair
        params:
            key-name: MyDemoPair
            region: us-east-1

    my_instance:
        resource: ec2 instance
        params:
            image-id: ami-c53d7ba0 # Ubuntu 14.04 HVM
            instance-type: t2.micro
            key-name: MyDemoPair
            region: us-east-1

    register_instance:
        resource: register_lb
        params:
            name: my-demo-load-balancer
            region: us-east-1

    set_private_key:
        action: set_private_key

    bootstrap_inf:
        action: bootstrap
